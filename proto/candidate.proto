syntax = "proto3";

package candidate;

service CandidateService {
    rpc GetById(CandidateRequest) returns (CandidateInfo);

    // server streaming
    rpc SearchCandidates(CandidateSearchRequest) returns (stream CandidateInfo);

    // bi-directional streaming
    rpc HireCandidate(CandidateRequest) returns (HireStatusResponse);

    rpc SetStatus(StatusRequest) returns (Empty);
}

message CandidateRequest {
    string candidateId = 1;
}

message CandidateSearchRequest {
    int32 experience = 1;
    int32 listingId = 2;
}

message CandidateInfo {
    string candidateId = 1;
    string name = 2;
    string email = 3;
    int32 experience = 4;
    string status = 5;
    int32 listingId = 6;
}

message HireStatusResponse {
    bool success = 1;
    string message = 2;
}



message Empty {}

message StatusRequest {
    int32 candidateId = 1;
    string status = 2;
}